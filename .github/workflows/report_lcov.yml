name: report-lcov
run-name: ${{ github.actor }} is running report-lcov ðŸš€

on:
  push:
    branches:
      # - main
      # - '**'
      - xxx
  pull_request:
    branches:
      - main

env:
  CMAKE_VERSION: 3.21.4
  BUILD_DIR: ${{ github.workspace }}/build  
  BUILD_TYPE: Debug

permissions:
  pull-requests: write

jobs:
  generate-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Print GitHub context
        run: |
          echo "GitHub Event: ${{ github.event_name }}"
          echo "Runner OS: ${{ runner.os }}"
          echo "GitHub Ref: ${{ github.ref }}"
          echo "GitHub Repository: ${{ github.repository }}"
          echo "Workspace: ${{ github.workspace }}"

      - name: Set up dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y g++ lcov

      - name: Set up CMake
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: ${{ env.CMAKE_VERSION }}        
      
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure CMake
        run: cmake -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DENABLE_TESTING=ON -DENABLE_COVERAGE=ON -B ${{ env.BUILD_DIR }} -S .

      - name: Build with CMake
        run: cmake --build ${{ env.BUILD_DIR }} --config ${{ env.BUILD_TYPE }} --target coverage

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: ${{ env.BUILD_DIR }}
      
  # generate-coverage-base:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Print GitHub context
  #       run: |
  #         echo "GitHub Event: ${{ github.event_name }}"
  #         echo "Runner OS: ${{ runner.os }}"
  #         echo "GitHub Ref: ${{ github.ref }}"
  #         echo "GitHub Repository: ${{ github.repository }}"
  #         echo "Workspace: ${{ github.workspace }}"

  #     - name: Set up dependencies
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y g++ lcov

  #     - name: Set up CMake
  #       uses: lukka/get-cmake@latest
  #       with:
  #         cmakeVersion: ${{ env.CMAKE_VERSION }}        
      
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #       with:
  #         ref: main

  #     - name: Configure CMake
  #       run: cmake -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DENABLE_TESTING=ON -DENABLE_COVERAGE=ON -B ${{ env.BUILD_DIR }} -S .

  #     - name: Build with CMake
  #       run: cmake --build ${{ env.BUILD_DIR }} --config ${{ env.BUILD_TYPE }} --target coverage

  #     - name: Upload coverage report
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: coverage-info-base
  #         path: ${{ env.BUILD_DIR }}/coverage.info
      
  #     - name: Upload coverage html report
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: coverage-html-base
  #         path: ${{ env.BUILD_DIR }}/coverage_html
    
  generate-report:
    runs-on: ubuntu-latest
    needs: [generate-coverage, generate-coverage-base]

    steps:
      - name: ls -l
        run: ls -l

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts

      - name: ls
        run: ls -l

      - name: Setup LCOV
        uses: hrishikesh-kadam/setup-lcov@v1

      - name: Reprot code coverage
        uses: zgosalvez/github-actions-report-lcov@v3
        with:
          coverage-files: coverage.info
          minimum-coverage: 90
          artifact-name: code-coverage-report
          github-token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: ${{ github.workspace }}
          update-comment: true
